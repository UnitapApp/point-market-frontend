import {
  EnrollmentDurationsProps,
  ProviderDashboardFormDataProp,
} from "@/types";

export const formInitialData: ProviderDashboardFormDataProp = {
  provider: "",
  description: "",
  isNft: false,
  isNativeToken: false,
  tokenAmount: "",
  tokenContractAddress: "",
  nftContractAddress: "",
  nftTokenIds: [],
  selectedChain: null,
  startTimeStamp: null,
  endTimeStamp: null,
  maxNumberOfEntries: null,
  email: "",
  twitter: "",
  discord: "",
  telegram: "",
  creatorUrl: "",
  necessaryInfo: "",
  satisfy: "satisfyAll",
  numberOfDuration: 0,
  durationUnitTime: "Month",
  NftSatisfy: false,
  decimal: null,
  tokenName: null,
  tokenSymbol: null,
  tokenDecimals: null,
  userTokenBalance: undefined,
  nftName: null,
  nftSymbol: null,
  userNftBalance: undefined,
  nftTokenUri: null,
  winnersCount: 1,
  totalAmount: "",
};

export const enrollmentDurationsInit: EnrollmentDurationsProps[] = [
  {
    id: 0,
    name: "1 Week",
    selected: false,
    time: null,
    value: 1,
    status: "week",
  },
  {
    id: 1,
    name: "2 Week",
    selected: false,
    time: null,
    value: 2,
    status: "week",
  },
  {
    id: 2,
    name: "1 Month",
    selected: false,
    time: null,
    value: 1,
    status: "month",
  },
  {
    id: 3,
    name: "2 Month",
    selected: false,
    time: null,
    value: 2,
    status: "month",
  },
];

export const errorMessages = {
  required: "Required",
  invalidFormat: "Invalid Format",
  startTimeDuration: "The start time cannot precede the current time",
  endDateUnacceptable: "End date is unacceptable.",
  period: "The minimum period is one week.",
  endLessThanStart: "The minimum duration is 1 hour.",
  invalidInput: "Invalid input",
};
